# This is for Envoy 1.15.

#admin:
#  access_log_path: /tmp/envoy_admin.log
#  address:
#    socket_address:
#      address: 127.0.0.1
#      port_value: 9000

static_resources:
  listeners:
  - name: all_http_routes
    address:
      socket_address: { address: 0.0.0.0, port_value: 443 }

    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:  
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_http
          access_log:
          - name: envoy.access_loggers.stdout
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
          route_config:
            name: all_http_route
            virtual_hosts:
            - name: all_http_cluster
              domains: ["*"]
              routes: 
#             - match: { prefix: "/hc"}
#               direct_response: { status: 200, body: { inline_string: "soy el health check del envoy devqa" }}
                - match:
                    prefix: "/"
                  route:
#                    host_rewrite_literal: "envoy-dev"
                    auto_host_rewrite: true
                    cluster: envoy-dev

          http_filters:

          # evaluate JWT tokens, allow_missing allows API Key also
          - name: envoy.filters.http.jwt_authn
            typed_config: 
              "@type": type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication
              providers:
                apigee:
                  issuer: https://internal-develop-act.amarello.cloud/remote-token/token
                  audiences:
                  - remote-service-client
                  remote_jwks:
                    http_uri:
                      uri: https://internal-develop-act.amarello.cloud/remote-token/certs
                      cluster: apigee-auth-service
                      timeout: 5s
                    cache_duration:
                      seconds: 300
                  payload_in_metadata: https://internal-develop-act.amarello.cloud/remote-token/token
              rules:
              - match:
                  prefix: /
                requires:
                  requires_any:
                    requirements:
                    - provider_name: apigee
                    - allow_missing: {}

          # evaluate Apigee rules
          - name: envoy.filters.http.ext_authz
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
              transport_api_version: V3
              grpc_service:
                envoy_grpc:
                  cluster_name: apigee-remote-service-envoy
                timeout: 1s
              failure_mode_allow: true
              metadata_context_namespaces:
              - envoy.filters.http.jwt_authn

          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
          common_tls_context:
            tls_certificates:
            - certificate_chain: {filename: "/home/adminux/envoy/certs/v2dlenvoy01.cer"}
              private_key: {filename: "/home/adminux/envoy/certs/v2dlenvoy01-key.pem"}
#            alpn_protocols: ["h2,http/1.1"]
            validation_context:
               trusted_ca:
                  filename: /home/adminux/envoy/certs/RootCAActinver.cer

    access_log: 

          # collect Apigee analytics
          - name: envoy.access_loggers.http_grpc
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.access_loggers.grpc.v3.HttpGrpcAccessLogConfig
              common_config:
                transport_api_version: V3
                grpc_service:
                  envoy_grpc:
                    cluster_name: apigee-remote-service-envoy
                log_name: apigee-remote-service-envoy
              additional_request_headers_to_log:
              - :authority # default target header
              # context headers
#              - x-apigee-accesstoken
#              - x-apigee-api
#              - x-apigee-apiproducts
#              - x-apigee-application
#              - x-apigee-clientid
#              - x-apigee-developeremail
#              - x-apigee-environment





  clusters:

  # define cluster for httpbin.org target
  - name: envoy-dev
    connect_timeout: 1.0s
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: envoy-dev
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 10.10.111.3
                port_value: 9080  


#  - name: httpbin
#    connect_timeout: 2s
#    type: STRICT_DNS
#    dns_lookup_family: V4_ONLY
#    lb_policy: ROUND_ROBIN
#    load_assignment:
#      cluster_name: httpbin
#      endpoints:
#      - lb_endpoints:
#        - endpoint:
#            address:
#              socket_address:
#                address: "httpbin.org"
#                port_value: 443
#    transport_socket:
#      name: envoy.transport_sockets.tls
#      typed_config:
#        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
#        sni: "httpbin.org"
#        common_tls_context: 
#          validation_context:
#            match_subject_alt_names:
#            - exact: "*.httpbin.org"
#            trusted_ca:
#              filename: /home/adminux/envoy/certs/RootCAActinver.cer
#          tls_certificates:
#            - certificate_chain:
#                filename: "/home/adminux/envoy/certs/v2dlenvoy01.cer"
#              private_key:
#                filename: "/home/adminux/envoy/certs/v2dlenvoy01-key.pem"

  # define cluster for Apigee remote service
  - name: apigee-remote-service-envoy
    type: LOGICAL_DNS
    http2_protocol_options: {}
    load_assignment:
      cluster_name: apigee-remote-service-envoy
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 127.0.0.1
                port_value: 5000
    common_lb_config:
      healthy_panic_threshold:
        value: 50.0
    health_checks:
      - timeout: 1s
        interval: 5s
        interval_jitter: 1s
        no_traffic_interval: 5s
        unhealthy_threshold: 1
        healthy_threshold: 3
        grpc_health_check: {}
    connect_timeout: 0.25s

  # define cluster for Apigee JWKS certs
  - name: apigee-auth-service
    connect_timeout: 2s
    type: LOGICAL_DNS
    dns_lookup_family: V4_ONLY
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: apigee-auth-service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: "internal-develop-act.amarello.cloud"
                port_value: "443"
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
        sni: "internal-develop-act.amarello.cloud"
